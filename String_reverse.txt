%macro print 2
    mov rax, 1
    mov rdi, 1
    mov rsi, %1
    mov rdx, %2
    syscall
%endmacro

%macro read 2
    mov rax, 0
    mov rdi, 0
    mov rsi, %1
    mov rdx, %2
    syscall
%endmacro

section .data
    m1 db 10d, "Enter String: "
    l1 equ $-m1
    m2 db 10d, "Length of String: "
    l2 equ $-m2
    m3 db 10d, "Reversed String: "
    l3 equ $-m3

section .bss
    string resb 50
    string2 resb 50
    length resb 16
    answer resb 16

section .text
    global _start

_start:
    print m1, l1
    read string, 50
    mov [length], rax
    print m2, l2
    mov rax, [length]

    mov rsi, answer + 15
    mov rcx, 16
loop1:
    mov rdx, 0
    mov rbx, 16
    div rbx
    cmp dl, 09h
    jbe skip1

    add dl, 07h
skip1:
    add dl, 30h
    mov [rsi], dl

    dec rsi
    dec rcx
    jnz loop1
    print answer, 16

    mov rsi, string
    mov rdi, string2
    mov rcx, [length]
    add rdi, rcx
    dec rdi

loop2:
    mov al, [rsi]
    mov [rdi], al
    dec rdi
    inc rsi
    loop loop2

    print m3, l3
    print string2, [length]

    mov rax, 60
    mov rdx, 0
    syscall